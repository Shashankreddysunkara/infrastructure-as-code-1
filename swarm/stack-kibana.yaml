version: '3.4'
services:
  kibana1:
    labels:
        service: kibana
    image: ${KIBANA_IMAGE}
    environment:
      SERVER_NAME: ${DOCKER_HOST_1}
      ELASTICSEARCH_URL: https://${DOCKER_HOST_1}:9200
      NODE_TLS_REJECT_UNAUTHORIZED: 0
      NODE_EXTRA_CA_CERTS: /usr/share/kibana/config/ca_cert.pem
    volumes:
      - kibana_data1:/usr/share/kibana/data
    ports:
      - target: 5601
        published: 5601
        protocol: tcp
        mode: host
    logging:
      options:
        labels: "service"
    deploy:
      mode: global
      placement:
        constraints:
          - node.role == worker
          - node.labels.kibana == true
          - node.labels.zone == a
      endpoint_mode: dnsrr
      update_config:
        parallelism: 1
        failure_action: rollback
        delay: 30s
        order: stop-first
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 120s
      resources:
        limits:
          cpus: '1'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M
    secrets:
      - source: kibana_key
        target: /usr/share/kibana/config/kibana_key.pem
        uid: '1000'
        gid: '1000'
        mode: 0440
      - source: kibana_cert
        target: /usr/share/kibana/config/kibana_cert.pem
        uid: '1000'
        gid: '1000'
        mode: 0440
      - source: ca_cert
        target: /usr/share/kibana/config/ca_cert.pem
        uid: '1000'
        gid: '1000'
        mode: 0440
    configs:
      - source: kibana_config
        target: /usr/share/kibana/config/kibana.yml
        uid: '1000'
        gid: '1000'
        mode: 0440
  kibana2:
    labels:
        service: kibana
    image: ${KIBANA_IMAGE}
    environment:
      SERVER_NAME: ${DOCKER_HOST_2}
      ELASTICSEARCH_URL: https://${DOCKER_HOST_2}:9200
      NODE_TLS_REJECT_UNAUTHORIZED: 0
      NODE_EXTRA_CA_CERTS: /usr/share/kibana/config/ca_cert.pem
    volumes:
      - kibana_data2:/usr/share/kibana/data
    ports:
      - target: 5601
        published: 5601
        protocol: tcp
        mode: host
    logging:
      options:
        labels: "service"
    deploy:
      mode: global
      placement:
        constraints:
          - node.role == worker
          - node.labels.kibana == true
          - node.labels.zone == b
      endpoint_mode: dnsrr
      update_config:
        parallelism: 1
        failure_action: rollback
        delay: 30s
        order: stop-first
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 120s
      resources:
        limits:
          cpus: '1'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M
    secrets:
      - source: kibana_key
        target: /usr/share/kibana/config/kibana_key.pem
        uid: '1000'
        gid: '1000'
        mode: 0440
      - source: kibana_cert
        target: /usr/share/kibana/config/kibana_cert.pem
        uid: '1000'
        gid: '1000'
        mode: 0440
      - source: ca_cert
        target: /usr/share/kibana/config/ca_cert.pem
        uid: '1000'
        gid: '1000'
        mode: 0440
    configs:
      - source: kibana_config
        target: /usr/share/kibana/config/kibana.yml
        uid: '1000'
        gid: '1000'
        mode: 0440
  kibana3:
    labels:
        service: kibana
    image: ${KIBANA_IMAGE}
    environment:
      SERVER_NAME: ${DOCKER_HOST_3}
      ELASTICSEARCH_URL: https://${DOCKER_HOST_3}:9200
      NODE_TLS_REJECT_UNAUTHORIZED: 0
      NODE_EXTRA_CA_CERTS: /usr/share/kibana/config/ca_cert.pem
    volumes:
      - kibana_data3:/usr/share/kibana/data
    ports:
      - target: 5601
        published: 5601
        protocol: tcp
        mode: host
    logging:
      options:
        labels: "service"
    deploy:
      mode: global
      placement:
        constraints:
          - node.role == worker
          - node.labels.kibana == true
          - node.labels.zone == c
      endpoint_mode: dnsrr
      update_config:
        parallelism: 1
        failure_action: rollback
        delay: 30s
        order: stop-first
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 120s
      resources:
        limits:
          cpus: '1'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M
    secrets:
      - source: kibana_key
        target: /usr/share/kibana/config/kibana_key.pem
        uid: '1000'
        gid: '1000'
        mode: 0440
      - source: kibana_cert
        target: /usr/share/kibana/config/kibana_cert.pem
        uid: '1000'
        gid: '1000'
        mode: 0440
      - source: ca_cert
        target: /usr/share/kibana/config/ca_cert.pem
        uid: '1000'
        gid: '1000'
        mode: 0440
    configs:
      - source: kibana_config
        target: /usr/share/kibana/config/kibana.yml
        uid: '1000'
        gid: '1000'
        mode: 0440
networks:
  default:
    external:
      name: services
volumes:
    kibana_data1:
    kibana_data2:
    kibana_data3:
secrets:
  kibana_key:
    file: ${SECRETS_PATH}/kibana_key.pem
  kibana_cert:
    file: ${SECRETS_PATH}/kibana_cert.pem
  ca_cert:
    file: ${SECRETS_PATH}/ca_cert.pem
configs:
  kibana_config:
    file: kibana.yaml
